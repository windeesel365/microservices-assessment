version: '3.8'

services:
  user_service:
    build:
      context: .
      dockerfile: services/user/Dockerfile
    container_name: user_service
    ports:
      - "8080:8080"
    env_file:
      - ./services/user/.env
    depends_on:
      - user_postgres_db
      
    restart: unless-stopped  


  product_service:
    build:
      context: .
      dockerfile: services/product/Dockerfile
    container_name: product_service
    ports:
      - "8081:8081"
    env_file:
      - ./services/product/.env
    depends_on:
      - product_postgres_db
      
    restart: unless-stopped  





  user_postgres_db:
    image: postgres:16
    container_name: postgres
    environment:
      - POSTGRES_DB=ecommerce_user   
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data


  product_postgres_db:
    image: postgres:16
    container_name: postgres
    environment:
      - POSTGRES_DB=ecommerce_product 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data      


  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - user_postgres_db
      - product_postgres_db
    restart: unless-stopped


volumes:
  postgres_data: